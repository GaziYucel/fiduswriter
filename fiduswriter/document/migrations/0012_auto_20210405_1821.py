# Generated by Django 3.1.4 on 2021-04-05 16:21

from django.db import migrations


def change_access_right_to_generic_key(apps, schema_editor):
    AccessRight  = apps.get_model('document', 'AccessRight')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    UserProfile = apps.get_model('user', 'UserProfile')
    user_profile_ct = ContentType.objects.filter(
        app_label='user',
        model='userprofile'
    ).first()
    access_rights = AccessRight.objects.all()
    for access_right in access_rights:
        up = UserProfile.objects.get_or_create(user=access_right.user)[0]
        access_right.holder_id = up.id
        access_right.holder_type = user_profile_ct
        access_right.save()


def reverse_change_access_right_to_generic_key(apps, schema_editor):
    AccessRight  = apps.get_model('document', 'AccessRight')
    access_rights = AccessRight.objects.all()
    user_profile_ct = ContentType.objects.filter(
        app_label='user',
        model='userprofile'
    ).first()
    for access_right in access_rights:
        if access_right.holder_type != user_profile_ct:
            # This is not a regular user. Don't try to revert
            continue
        up = UserProfile.objects.filter(id=access_right.holder_id).first()
        if not up:
            # UserProfile could not be found
            continue
        access_right.user = up.user
        access_right.save()


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0011_auto_20210405_1820'),
        ('user', '0001_squashed_0003_auto_20151226_1110')
    ]

    operations = [
        migrations.RunPython(
            change_access_right_to_generic_key,
            reverse_change_access_right_to_generic_key
        ),
    ]
